{"version":3,"sources":["components/Pagination.jsx","components/Home.jsx","components/Casts.jsx","components/RelatedMovie.jsx","components/Movie.jsx","components/NavHeader.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["Pagination","state","page","this","props","totalPages","prevBtn","nextBtn","prevPage","nextPage","console","log","react_default","a","createElement","className","Link","to","pathname","concat","pg","Object","assign","onClick","onPrev","onNext","Component","API_KEY","App","movLists","prices","fetchNowPlaying","_callee","url","req","res","regenerator_default","wrap","_context","prev","next","_this","fetch","sent","json","setState","results","total_pages","stop","calcPrice","rating","price","goNext","prevState","goPrev","_this2","Grid","Row","map","m","id","title","toLowerCase","replace","slug","purchasingStatus","purchased","filter","p","Col","xs","sm","md","key","vote_average","src","poster_path","alt","length","substring","overview","style","color","hidden","components_Pagination","window","scrollTo","Casts","lib_default","speed","autoplay","slidesToShow","arrows","slidesToScroll","infinite","adaptiveHeight","casts","c","cast_id","profile_path","name","character","RelatedMovie","fluid","similar","s","recommend","r","Movie","tagline","year","runtime","genres","poster","backdrop","voters","purchaseModal","fetchMovie","location","release_date","backdrop_path","vote_count","fetchCasts","fetchSimilar","fetchRecommend","_callee2","_context2","cast","slice","_callee3","_context3","_callee4","_context4","showPurchaseModal","hidePurchaseModal","_this$state","b","purchasingBalance","balance","g","Badge","Math","trunc","disabled","Modal","show","onHide","Header","Title","Body","Footer","Button","onBuying","ProgressBar","now","components_Casts","components_RelatedMovie","NavHeader","Navbar","fixedTop","Brand","Nav","pullRight","NavItem","eventKey","href","handleBuying","boughtArr","toConsumableArray","BrowserRouter","basename","process","Fragment","components_NavHeader","Switch","Route","path","render","Home","exact","components_Movie","components_Footer","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4874b75a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Pagination extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    const page = this.props.page;\r\n    const totalPages = this.props.totalPages;\r\n    let prevBtn = {};\r\n    let nextBtn = {};\r\n    if (page === 1) {\r\n      prevBtn[\"hidden\"] = \"hidden\";\r\n    }\r\n    if (page === totalPages) {\r\n      nextBtn[\"hidden\"] = \"hidden\";\r\n    }\r\n    let prevPage = page - 1;\r\n    let nextPage = page + 1;\r\n    console.log(\"props page\", this.props.page);\r\n    return (\r\n      <div className=\"pagination\">\r\n        <Link to={{ pathname: `/page/${prevPage}`, state: { pg: prevPage } }}>\r\n          <button onClick={this.props.onPrev} {...prevBtn}>\r\n            Prev\r\n          </button>\r\n        </Link>\r\n        <Link to={{ pathname: `/page/${nextPage}`, state: { pg: nextPage } }}>\r\n          <button onClick={this.props.onNext} {...nextBtn}>\r\n            Next\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\nimport Pagination from \"./Pagination\";\r\nimport \"../App.css\";\r\n\r\nconst API_KEY = \"3210a5ea0268de0ce8488efd017058c1\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    movLists: [],\r\n    prices: [],\r\n    page: 1,\r\n    totalPages: null\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Grid>\r\n          <h2 className=\"sub-header\">Film yang sedang tayang</h2>\r\n          <Row className=\"row-eq-height\">\r\n            {this.state.movLists.map(m => {\r\n              let id = m.id;\r\n              let title = m.title;\r\n              title = title.toLowerCase();\r\n              title = title.replace(/\\s/g, \"-\");\r\n              let slug = \"\".concat(id, \"-\", title);\r\n\r\n              let purchasingStatus = this.props.state.purchased.filter(\r\n                p => p.id === id\r\n              );\r\n              return (\r\n                <Col xs={6} sm={4} md={3} key={m.id} className=\"xs-to-1\">\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/movie/${slug}`,\r\n                      state: { id: id }\r\n                    }}\r\n                    className=\"link-movie\"\r\n                  >\r\n                    <div className=\"list-box\">\r\n                      <div className=\"rating\">{m.vote_average}</div>\r\n                      <div className=\"img-box\">\r\n                        <img\r\n                          src={\r\n                            `https://image.tmdb.org/t/p/w500/` + m.poster_path\r\n                          }\r\n                          alt={`Poster` + title}\r\n                        />\r\n                      </div>\r\n                      <div className=\"detail\">\r\n                        <p className=\"title\">\r\n                          {m.title.length < 20\r\n                            ? `${m.title}`\r\n                            : `${m.title.substring(0, 25) + \"...\"}`}\r\n                        </p>\r\n                        <p>\r\n                          {m.overview.length < 50\r\n                            ? `${m.overview}`\r\n                            : `${m.overview.substring(0, 70) + \"...\"}`}\r\n                        </p>\r\n                        <div className=\"purchase\">\r\n                          <p className=\"price\">\r\n                            Harga = {this.calcPrice(m.vote_average)}\r\n                          </p>\r\n                        </div>\r\n                        <p style={{ color: `#e74c3c` }}>\r\n                          <b hidden={!purchasingStatus.length}>\r\n                            Anda telah membeli film ini\r\n                          </b>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </Link>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Grid>\r\n        <Pagination\r\n          page={this.state.page}\r\n          totalPages={this.state.totalPages}\r\n          onNext={this.goNext}\r\n          onPrev={this.goPrev}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchNowPlaying();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  fetchNowPlaying = async () => {\r\n    const url = `https://api.themoviedb.org/3/movie/now_playing?api_key=${API_KEY}&page=${\r\n      this.state.page\r\n    }`;\r\n    let req = await fetch(url);\r\n    let res = await req.json();\r\n    this.setState({ movLists: res.results, totalPages: res.total_pages });\r\n  };\r\n\r\n  calcPrice = rating => {\r\n    let price = null;\r\n    if (rating > 1 && rating <= 3) {\r\n      price = 3500;\r\n    } else if (rating > 3 && rating <= 6) {\r\n      price = 8250;\r\n    } else if (rating > 6 && rating <= 8) {\r\n      price = 16350;\r\n    } else if (rating > 8 && rating <= 10) {\r\n      price = 21250;\r\n    }\r\n    return price;\r\n  };\r\n\r\n  goNext = () => {\r\n    this.setState(\r\n      prevState => ({ page: prevState.page + 1 }),\r\n      this.fetchNowPlaying\r\n    );\r\n  };\r\n\r\n  goPrev = prevState => {\r\n    this.setState(\r\n      prevState => ({ page: prevState.page - 1 }),\r\n      this.fetchNowPlaying\r\n    );\r\n  };\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport Slider from \"react-slick\";\r\n\r\nconst Casts = props => {\r\n  var settings = {\r\n    speed: 500,\r\n    autoplay: true,\r\n    slidesToShow: 4,\r\n    arrows: false,\r\n    slidesToScroll: 1,\r\n    infinite: true,\r\n    adaptiveHeight: true\r\n  };\r\n\r\n  return (\r\n    <Slider {...settings} className=\"cast-slider\">\r\n      {props.casts.map(c => {\r\n        return (\r\n          <div className=\"cast-box\" key={c.cast_id}>\r\n            <div className=\"img-box\">\r\n              <img\r\n                src={\"http://image.tmdb.org/t/p/w500/\" + c.profile_path}\r\n                alt={`Poster` + c.name}\r\n              />\r\n            </div>\r\n            <p className=\"name\">{c.name}</p>\r\n            <p className=\"char\">{c.character}</p>\r\n          </div>\r\n        );\r\n      })}\r\n    </Slider>\r\n  );\r\n};\r\n\r\nexport default Casts;\r\n","import React from \"react\";\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst RelatedMovie = props => {\r\n  return (\r\n    <Grid className=\"related\" fluid>\r\n      <Row>\r\n        <Col md={6}>\r\n          <div className=\"related-box\">\r\n            <p className=\"header\">Film Serupa</p>\r\n            <Row>\r\n              {props.similar.map(s => {\r\n                let id = s.id;\r\n                let title = s.title;\r\n                title = title.toLowerCase();\r\n                title = title.replace(/\\s/g, \"-\");\r\n                let slug = \"\".concat(s.id, \"-\", title);\r\n                return (\r\n                  <Col xs={6} md={3} key={id}>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/movie/${slug}`,\r\n                        state: { id: id }\r\n                      }}\r\n                    >\r\n                      <div className=\"related-item\">\r\n                        <div className=\"img-box\">\r\n                          <img\r\n                            src={\r\n                              \"http://image.tmdb.org/t/p/w500/\" + s.poster_path\r\n                            }\r\n                            alt={s.title}\r\n                          />\r\n                        </div>\r\n                        <div className=\"detail\">\r\n                          <p className=\"title\">\r\n                            {s.title.length < 15\r\n                              ? `${s.title}`\r\n                              : `${s.title.substring(0, 20) + \"...\"}`}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </Link>\r\n                  </Col>\r\n                );\r\n              })}\r\n            </Row>\r\n          </div>\r\n        </Col>\r\n        <Col md={6}>\r\n          <div className=\"related-box\">\r\n            <p className=\"header\">Film Rekomendasi</p>\r\n            <Row>\r\n              {props.recommend.map(r => {\r\n                let id = r.id;\r\n                let title = r.title;\r\n                title = title.toLowerCase();\r\n                title = title.replace(/\\s/g, \"-\");\r\n                let slug = \"\".concat(r.id, \"-\", title);\r\n                return (\r\n                  <Col xs={6} md={3} key={id}>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/movie/${slug}`,\r\n                        state: { id: id }\r\n                      }}\r\n                    >\r\n                      <div className=\"related-item\">\r\n                        <div className=\"img-box\">\r\n                          <img\r\n                            src={\r\n                              \"http://image.tmdb.org/t/p/w500/\" + r.poster_path\r\n                            }\r\n                            alt={r.title}\r\n                          />\r\n                        </div>\r\n                        <div className=\"detail\">\r\n                          <p className=\"title\">\r\n                            {r.title.length < 15\r\n                              ? `${r.title}`\r\n                              : `${r.title.substring(0, 20) + \"...\"}`}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </Link>\r\n                  </Col>\r\n                );\r\n              })}\r\n            </Row>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default RelatedMovie;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  ProgressBar,\r\n  Modal,\r\n  Button,\r\n  Badge\r\n} from \"react-bootstrap\";\r\nimport Casts from \"./Casts\";\r\nimport RelatedMovie from \"./RelatedMovie\";\r\n\r\nconst API_KEY = \"3210a5ea0268de0ce8488efd017058c1\";\r\n\r\nclass Movie extends Component {\r\n  state = {\r\n    id: \"\",\r\n    title: \"\",\r\n    tagline: \"\",\r\n    year: \"\",\r\n    overview: \"\",\r\n    runtime: null,\r\n    genres: [],\r\n    poster: \"\",\r\n    backdrop: \"\",\r\n    casts: [],\r\n    rating: null,\r\n    voters: null,\r\n    price: \"\",\r\n    purchaseModal: false,\r\n    similar: [],\r\n    recommend: []\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      title,\r\n      tagline,\r\n      year,\r\n      overview,\r\n      runtime,\r\n      genres,\r\n      rating,\r\n      voters,\r\n      price,\r\n      poster\r\n    } = this.state;\r\n    let purchasingStatus = this.props.purchased.filter(b => b.id === id);\r\n    let purchasingBalance = this.props.balance - this.state.price < 0;\r\n    return (\r\n      <div>\r\n        <Grid className=\"movie-box\">\r\n          <Row className=\"show-grid\">\r\n            <Col xs={4} md={4} className=\"xs-to-1\">\r\n              <div className=\"poster\">\r\n                <div className=\"img-box\">\r\n                  <img\r\n                    src={\"http://image.tmdb.org/t/p/w500/\" + poster}\r\n                    alt={`Poster` + title}\r\n                  />\r\n                  <div className=\"purchase\">\r\n                    <div className=\"genres\">\r\n                      {genres.map(g => {\r\n                        return <Badge key={g.id}>{g.name}</Badge>;\r\n                      })}\r\n                    </div>\r\n                    <p className=\"runtime\">\r\n                      Durasi{\" \"}\r\n                      <span>\r\n                        {Math.trunc(runtime / 60)} jam {runtime % 60} menit\r\n                      </span>\r\n                    </p>\r\n                    <p className=\"price\">Harga = {price}</p>\r\n                    <button\r\n                      className=\"btn btn-primer btn-purchase\"\r\n                      disabled={purchasingStatus.length || purchasingBalance}\r\n                      onClick={this.showPurchaseModal}\r\n                    >\r\n                      BELI FILM\r\n                    </button>\r\n                    <p style={{ color: `#e74c3c` }}>\r\n                      <b hidden={!purchasingStatus.length}>\r\n                        Anda telah membeli film ini\r\n                      </b>\r\n                    </p>\r\n                    <Modal\r\n                      className=\"purchase-modal\"\r\n                      show={this.state.purchaseModal}\r\n                      onHide={this.hidePurchaseModal}\r\n                    >\r\n                      <Modal.Header>\r\n                        <Modal.Title>Konfirmasi Pembelian</Modal.Title>\r\n                      </Modal.Header>\r\n\r\n                      <Modal.Body>\r\n                        Saat ini Anda memiliki saldo sebesar{\" \"}\r\n                        <b>{this.props.balance}</b>\r\n                        <br />\r\n                        Apakah Anda yakin ingin membeli film <b>{title}</b>{\" \"}\r\n                        seharga <b>{price}</b>?\r\n                      </Modal.Body>\r\n\r\n                      <Modal.Footer>\r\n                        <Button onClick={this.hidePurchaseModal}>Batal</Button>\r\n                        <Button\r\n                          className=\"btn btn-primer\"\r\n                          onClick={() => {\r\n                            this.props.onBuying(id, price);\r\n                            this.hidePurchaseModal();\r\n                          }}\r\n                        >\r\n                          Beli\r\n                        </Button>\r\n                      </Modal.Footer>\r\n                    </Modal>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col xs={8} md={8} className=\"xs-to-1\">\r\n              <div className=\"detail\">\r\n                <div className=\"rating\">\r\n                  <ProgressBar now={rating * 10} />\r\n                  <span>{rating}</span> dari {voters} orang\r\n                </div>\r\n                <p className=\"title\">\r\n                  {title}\r\n                  <span>({year.slice(0, 4)})</span>\r\n                </p>\r\n                {tagline ? <p className=\"tagline\">\"{tagline}\"</p> : null}\r\n                <p className=\"overview\">{overview}</p>\r\n                <Casts casts={this.state.casts} />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n        <RelatedMovie\r\n          similar={this.state.similar}\r\n          recommend={this.state.recommend}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchMovie();\r\n  }\r\n\r\n  fetchMovie = async () => {\r\n    let id = this.props.location.state.id;\r\n    const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`;\r\n    let req = await fetch(url);\r\n    let res = await req.json();\r\n    this.setState({\r\n      id: res.id,\r\n      title: res.title,\r\n      tagline: res.tagline,\r\n      year: res.release_date,\r\n      overview: res.overview,\r\n      runtime: res.runtime,\r\n      genres: res.genres,\r\n      poster: res.poster_path,\r\n      backdrop: res.backdrop_path,\r\n      rating: res.vote_average,\r\n      voters: res.vote_count\r\n    });\r\n    this.calcPrice();\r\n    this.fetchCasts();\r\n    this.fetchSimilar();\r\n    this.fetchRecommend();\r\n  };\r\n\r\n  fetchCasts = async () => {\r\n    let id = this.state.id;\r\n    const url = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`;\r\n    let req = await fetch(url);\r\n    let res = await req.json();\r\n    let casts = res.cast.slice(0, 10);\r\n    this.setState({ casts });\r\n  };\r\n\r\n  fetchSimilar = async () => {\r\n    let id = this.state.id;\r\n    const url = `https://api.themoviedb.org/3/movie/${id}/similar?api_key=${API_KEY}`;\r\n    let req = await fetch(url);\r\n    let res = await req.json();\r\n    let similar = res.results.slice(0, 4);\r\n    this.setState({ similar });\r\n  };\r\n\r\n  fetchRecommend = async () => {\r\n    let id = this.state.id;\r\n    const url = `https://api.themoviedb.org/3/movie/${id}/recommendations?api_key=${API_KEY}`;\r\n    let req = await fetch(url);\r\n    let res = await req.json();\r\n    let recommend = res.results.slice(0, 4);\r\n    this.setState({ recommend });\r\n  };\r\n\r\n  calcPrice = () => {\r\n    let rating = this.state.rating;\r\n    let price = null;\r\n    if (rating > 1 && rating <= 3) {\r\n      price = 3500;\r\n    } else if (rating > 3 && rating <= 6) {\r\n      price = 8250;\r\n    } else if (rating > 6 && rating <= 8) {\r\n      price = 16350;\r\n    } else if (rating > 8 && rating <= 10) {\r\n      price = 21250;\r\n    }\r\n    this.setState({ price });\r\n  };\r\n\r\n  showPurchaseModal = () => {\r\n    this.setState({ purchaseModal: true });\r\n  };\r\n\r\n  hidePurchaseModal = () => {\r\n    this.setState({ purchaseModal: false });\r\n  };\r\n}\r\n\r\nexport default Movie;\r\n","import React, { Component } from \"react\";\r\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass NavHeader extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar fixedTop>\r\n        <Navbar.Header>\r\n          <Navbar.Brand>\r\n            <Link to={{ pathname: \"/\" }}>tokoFLIX</Link>\r\n          </Navbar.Brand>\r\n        </Navbar.Header>\r\n        <Nav pullRight className=\"balance\">\r\n          <NavItem eventKey={1}>\r\n            Saldo : <span>{this.props.balance}</span>\r\n          </NavItem>\r\n        </Nav>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavHeader;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <p>\r\n        <a href=\"https://https://github.com/pandurijal\">Tokoflix &copy; 2019</a>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Home from \"./components/Home\";\r\nimport Movie from \"./components/Movie\";\r\nimport NavHeader from \"./components/NavHeader\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    balance: 100000,\r\n    purchased: []\r\n  };\r\n  render() {\r\n    return (\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <React.Fragment>\r\n          <NavHeader balance={this.state.balance} />\r\n          <Switch>\r\n            <Route\r\n              path=\"/\"\r\n              render={props => (\r\n                <Home\r\n                  {...props}\r\n                  state={this.state}\r\n                  onBuying={this.handleBuying}\r\n                />\r\n              )}\r\n              exact\r\n            />\r\n            <Route\r\n              path=\"/page/:pg\"\r\n              render={props => (\r\n                <Home\r\n                  {...props}\r\n                  state={this.state}\r\n                  onBuying={this.handleBuying}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/movie/:id\"\r\n              render={props => (\r\n                <Movie\r\n                  {...props}\r\n                  balance={this.state.balance}\r\n                  purchased={this.state.purchased}\r\n                  onBuying={this.handleBuying}\r\n                />\r\n              )}\r\n            />\r\n          </Switch>\r\n          <Footer />\r\n        </React.Fragment>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n  handleBuying = (id, price) => {\r\n    let balance = this.state.balance;\r\n    let boughtArr = [];\r\n    boughtArr.id = id;\r\n    let purchased = [...this.state.purchased, boughtArr];\r\n    if (balance - price < 0) {\r\n      return null;\r\n    } else {\r\n      balance = balance - price;\r\n    }\r\n    this.setState({ balance, purchased });\r\n  };\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}